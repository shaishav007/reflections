I was born on the internet!!! That is awesome.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
There may be multiple contributors to a single project. It means that whenever someone changes a file online, it would be changed on my computer too. 
My own progress will be disrupted in this way. Hence its better if I pull the reps whenever I feel the need to.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork - copy from github to github. Makes a copy of someone else's rep for personal use in my account. If not this, then the other way would be to clone in my machine, make changes and push. Too-long. Fork rocks!!!
clone - copy rep from github to pc or pc to pc.Use it to make a copy for personal use
branches - make experimental changes in the existing version without affecting the original one. Just make the changes in a different branch and keep the original in master.

What is the benefit of having a copy of the last known state of the remote stored locally?
You stay updated with where the code is going.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Save and copy my version of files on the cloud (maybe google drive) with a readme file which will contain my progress in simple english. Since the exact code changes will not be visible, I guess it would be pretty inefficient. GitHub is a real solution for this need of developers.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
While working on experimental or new features or while making our own contribution in a collaborative project. Once our code is ready, we must make a pull request for fellow admins to check our features and add them if they are good enough. This is the conventional workflow and now I can see how this makes it a lot easier.
